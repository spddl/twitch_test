{"version":3,"sources":["TwitchGlitchWhite.svg","../node_modules/better-queue/lib sync /^better/-queue/-.*$","components/cache.js","helper/formatEmotes.js","helper/getRandomColor.js","components/chatLine.js","helper/FormatDate.js","redux/filter.js","redux/index.js","components/Log.js","components/Settings.js","components/TopBar.js","serviceWorker.js","helper/parseBadges.js","data/badges.js","data/twitch.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","cache","CellMeasurerCache","minHeight","defaultHeight","fixedWidth","keyMapper","rowIndex","refreshCache","rowHeight","_minHeight","_defaultHeight","clearAll","splitWords","RegExp","msg","emotes","emotesArray","measure","bttvEmotes","twitchEmotes","ffzEmotes","chan","bttvObj","ffzObj","word","exec","globalbttv","has","push","badge","get","name","start","index","end","length","globalffz","i","split","empty","Array","apply","map","slice","concat","splice","key","onLoad","className","title","alt","src","srcSet","urls","randomcolor","Math","floor","random","color","ACTION","App","props","source","tags","timestamp","toLowerCase","indexOf","styleColor","found","banDuration","textDecorationLine","textDecorationStyle","textDecorationColor","banReason","formatEmotes","getRandomColor","banText","this","banMsg","style","fontWeight","Component","zeroPad2","num","zeroPad3","_FormatDate","Datenow","mobile","date","Date","HH","getHours","mm","getMinutes","ss","getSeconds","SSS","getMilliseconds","DD","getDate","MM","getMonth","YYYY","getFullYear","FormatDate","cacheInput","cacheOutput","result","_memoizedFormatDate","debug","timer","Filter","allLogs","filter","console","log","undefined","find","value","logs","size","scrollBottom","time","CHANNEL","NAME","MSG","item","timeEnd","update","type","initialState","List","Map","level","hostname","settings","JSON","parse","localStorage","getItem","modalShow","twitchBadges","bttvBadges","fontClass","fontSize","maxLines","channelColor","channels","badges","global","store","createStore","state","action","ChannelColorList","len","found_","findIndex","line","targetMsgId","temp","set","Object","assign","forEach","username","ele","setItem","stringify","toArray","roomId","FILTER","Number","_10percent","_maxLines","takeLast","newColor","isNaN","toObject","window","__REDUX_DEVTOOLS_EXTENSION__","getBrowserHiddenProps","hidden","visibilityChange","document","msHidden","webkitHidden","LogContainer","handleResize","innerWidth","setState","bindListRef","current","forceUpdateGrid","listenScrollEvent","scrollHeight","scrollTop","clientHeight","UserNameRenderer","row","onClick","updateFilter","decamelize","text","replace","createBadge","versions","subscriber","bits","aria-label","image_url_1x","image_url_2x","image_url_4x","error","warn","createBadgeTags","hasOwnProperty","element","React","createRef","bind","addEventListener","_debounce","removeResizeListener","prevProps","_prevState","_snapshot","scrollToRow","_scrollingToRow","userInput","scrollButton","Button","variant","height","fontFamily","width","overscanColumnCount","overscanRowCount","scrollingResetTimeInterval","ref","rowCount","deferredMeasurementCache","onScroll","noRowsRenderer","rowRenderer","_key","parent","channelStyle","backgroundColor","channel","columnIndex","padding","wordWrap","lineHeight","PureComponent","connect","SettingsModal","context","handleShow","handleClose","handleChange","restart","addChannel","target","InputGroup","Prepend","Text","FormControl","defaultValue","onChange","Append","role","Modal","show","onHide","scrollable","Header","closeButton","Title","Body","Collapse","in","location","reload","Alert","Form","Group","as","Row","Label","column","sm","Col","Control","placeholder","min","max","md","lg","Check","inline","custom","label","defaultChecked","checked","aria-describedby","Footer","history","createBrowserHistory","configureUrlQuery","addChangeHandlers","urlPropsQueryConfig","QueryChannel","UrlQueryParamTypes","string","queryParam","QueryName","QueryMsg","TopBar","updateDebounceFilter","fn","delay","args","arguments","clearTimeout","setTimeout","debounce","onWheelHandler","onTouchMoveHandler","onTouchStartHandler","QueryHostname","QueryApp","onChangeQueryChannel","onChangeQueryName","onChangeQueryMsg","up","ChannelArray","nextIndex","AppArray","deltaY","updateFilterNext","touches","touchReset","pageY","touchY","t","appStyle","Badge","margin","touchAction","onWheel","onTouchMove","onTouchStart","Navbar","bg","collapseOnSelect","Brand","require","marginRight","ButtonToolbar","onSubmit","preventDefault","refs","search","marginBottom","Settings","enhance","compose","addUrlProps","isLocalhost","Boolean","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","tempChannels","chat","TwitchJs","token","joinTimeout","_readyState","StoreChannel","ChannelState","_channelState","substr","_joins","difference","_join","join","data","roomState","_parts","_part","a","_","err","on","command","message","_raw","badges_","reduce","parsed","rawKey","raw","systemMsg","fetch","res","status","statusText","json","badge_sets","resEmotes","sets","default_sets","emoticons","room","ReactDOM","render","Log","getElementById","URL","process","href","origin","response","contentType","headers","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cd0e0e29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TwitchGlitchWhite.5f80eca1.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 431;","import { CellMeasurerCache } from 'react-virtualized'\r\n\r\nexport const cache = new CellMeasurerCache({ // https://github.com/bvaughn/react-virtualized/blob/master/docs/CellMeasurer.md#cellmeasurercache\r\n  minHeight: 19,\r\n  defaultHeight: 19,\r\n  fixedWidth: true,\r\n  keyMapper: rowIndex => rowIndex\r\n})\r\n\r\nexport const refreshCache = function (rowHeight = 19) {\r\n  // console.log('refreshCache()')\r\n  // console.trace()\r\n\r\n  cache._minHeight = rowHeight\r\n  cache._defaultHeight = rowHeight\r\n  cache.clearAll()\r\n}\r\n","import React from 'react'\r\n\r\nconst splitWords = RegExp(/\\w+/, 'g')\r\n\r\nexport default ({ msg, emotes, emotesArray, measure, id, twitchEmotes, bttvEmotes, ffzEmotes, chan }) => {\r\n  const bttvObj = []\r\n  const ffzObj = []\r\n  if (bttvEmotes || ffzEmotes) {\r\n    let word\r\n    while ((word = splitWords.exec(msg)) !== null) {\r\n      if (bttvEmotes) {\r\n        if (emotes && emotes.globalbttv && emotes.globalbttv.has(word[0])) {\r\n          bttvObj.push({\r\n            badge: emotes.globalbttv.get(word[0]),\r\n            name: word[0],\r\n            start: word.index,\r\n            end: word.index + word[0].length\r\n          })\r\n        } else if (emotes && emotes[`${chan}-bttv`] && emotes[`${chan}-bttv`].has(word[0])) {\r\n          bttvObj.push({\r\n            badge: emotes[`${chan}-bttv`].get(word[0]),\r\n            name: word[0],\r\n            start: word.index,\r\n            end: word.index + word[0].length\r\n          })\r\n        }\r\n      }\r\n\r\n      if (ffzEmotes) {\r\n        if (emotes && emotes.globalffz && emotes.globalffz.has(word[0])) {\r\n          ffzObj.push({\r\n            badge: emotes.globalffz.get(word[0]),\r\n            name: word[0],\r\n            start: word.index,\r\n            end: word.index + word[0].length\r\n          })\r\n        } else if (emotes && emotes[`${chan}-ffz`] && emotes[`${chan}-ffz`].has(word[0])) {\r\n          ffzObj.push({\r\n            badge: emotes[`${chan}-ffz`].get(word[0]),\r\n            name: word[0],\r\n            start: word.index,\r\n            end: word.index + word[0].length\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // if (!(emotes.length || bttvObj.length || ffzObj.length)) {\r\n  //   return msg\r\n  // }\r\n\r\n  if (emotesArray.length === 0 && bttvObj.length === 0 && ffzObj.length === 0) {\r\n    return msg\r\n  }\r\n\r\n  // if (emotes.length === 0 && bttvObj.length === 0) {\r\n  //   return msg\r\n  // }\r\n\r\n  // if (emotes.length === 0) {\r\n  //   return msg\r\n  // }\r\n\r\n  // msg = msgBttvEmote\r\n  // console.log(msgBttvEmote)\r\n\r\n  // msg = emotes.map((emote, i) => {\r\n  //   const img = <img\r\n  //     key={`${id}-${emote.id}-${i}`}\r\n  //     // onLoad={measure}\r\n  //     className='emoticon'\r\n  //     alt={emote.id}\r\n  //     src={'//static-cdn.jtvnw.net/emoticons/v1/' + emote.id + '/1.0'}\r\n  //     srcSet={`//static-cdn.jtvnw.net/emoticons/v1/${emote.id}/2 2x, //static-cdn.jtvnw.net/emoticons/v1/${emote.id}/4 4x`}\r\n  //   />\r\n  //   const start = emote.start\r\n  //   const ende = emote.end + 1\r\n  //   const left = msg.slice(0, start)\r\n  //   const right = msg.slice(ende)\r\n  //   return (<span key={`${emote.id}-${i}`}>{left.concat(img, right)}</span>)\r\n  // })\r\n  // chatLine.js: 25 emotes: 0.002685546875ms\r\n  // chatLine.js: 25 emotes: 0.00390625ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.057861328125ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.0029296875ms\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.03515625ms\r\n\r\n  // // // // // // // // // // // // // // // // // //\r\n\r\n  // for (let i = emotes.length; i--;) {\r\n  //   msg.splice(\r\n  //     emotes[i].start,\r\n  //     emotes[i].end + 1,\r\n  //     <img\r\n  //       key={`${id}-${emotes[i].id}-${i}`}\r\n  //       // onLoad={measure}\r\n  //       className='emoticon'\r\n  //       alt={emotes[i].id}\r\n  //       src={'//static-cdn.jtvnw.net/emoticons/v1/' + emotes[i].id + '/1.0'}\r\n  //       srcSet={`//static-cdn.jtvnw.net/emoticons/v1/${emotes[i].id}/2 2x, //static-cdn.jtvnw.net/emoticons/v1/${emotes[i].id}/4 4x`}\r\n  //     />\r\n  //   )\r\n  // }\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.027099609375ms\r\n  // chatLine.js: 25 emotes: 0.00390625ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.00390625ms\r\n  // chatLine.js: 25 emotes: 0.0029296875ms\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.002685546875ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.029052734375ms\r\n  // chatLine.js: 25 emotes: 0.0029296875ms\r\n\r\n  // // // // // // // // // // // // // // // // // //\r\n\r\n  msg = msg.split('') // TODO problem für BTTV und FTZ\r\n\r\n  for (const i in emotesArray) { // https://github.com/tmijs/tmi.js/issues/11\r\n    const e = emotesArray[i]\r\n    const length = e.end - e.start\r\n    const empty = Array.apply(null, new Array(length + 1)).map(function () { return '' })\r\n    msg = msg.slice(0, e.start).concat(empty).concat(msg.slice(e.end + 1, msg.length))\r\n    msg.splice(e.start, 1, <img\r\n      key={`${id}-${e.id}-${i}`}\r\n      onLoad={measure}\r\n      className='emoticon'\r\n      title={'Twitch Emoticon'}\r\n      alt={e.id}\r\n      src={`//static-cdn.jtvnw.net/emoticons/v1/${e.id}/1.0`}\r\n      srcSet={`//static-cdn.jtvnw.net/emoticons/v1/${e.id}/2.0 2x, //static-cdn.jtvnw.net/emoticons/v1/${e.id}/4.0 4x`}\r\n    />)\r\n  }\r\n\r\n  if (bttvEmotes) {\r\n    for (const i in bttvObj) { // https://github.com/tmijs/tmi.js/issues/11\r\n      const e = bttvObj[i]\r\n      const length = e.end - e.start\r\n      const empty = Array.apply(null, new Array(length + 1)).map(function () { return '' })\r\n      msg = msg.slice(0, e.start).concat(empty).concat(msg.slice(e.end + 1, msg.length))\r\n      msg.splice(e.start, 1,\r\n        <img\r\n          key={`${e.badge.code}-${e.badge.id}-${i}`}\r\n          onLoad={measure}\r\n          className='emoticon'\r\n          title={'BTTV: ' + e.name}\r\n          alt={e.badge.code}\r\n          src={`//cdn.betterttv.net/emote/${e.badge.id}/1x`}\r\n          srcSet={`//cdn.betterttv.net/emote/${e.badge.id}/2x 2x, //cdn.betterttv.net/emote/${e.badge.id}/3x 3x`}\r\n        />)\r\n    }\r\n  }\r\n\r\n  if (ffzEmotes) {\r\n    for (const i in ffzObj) { // https://github.com/tmijs/tmi.js/issues/11\r\n      const e = ffzObj[i]\r\n      const length = e.end - e.start\r\n      const empty = Array.apply(null, new Array(length + 1)).map(function () { return '' })\r\n      msg = msg.slice(0, e.start).concat(empty).concat(msg.slice(e.end + 1, msg.length))\r\n      msg.splice(e.start, 1,\r\n        <img\r\n          key={`${e.badge.name}-${e.badge.id}-${i}`}\r\n          onLoad={measure}\r\n          className='emoticon'\r\n          title={'FFZ: ' + e.badge.name}\r\n          alt={e.badge.name}\r\n          src={`${e.badge.urls[1]}`}\r\n          srcSet={`${e.badge.urls[2]} 2x, ${e.badge.urls[4]} 4x`}\r\n        />)\r\n    }\r\n  }\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.051025390625ms\r\n  // chatLine.js: 25 emotes: 0.003173828125ms\r\n  // chatLine.js: 25 emotes: 0.049072265625ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.071044921875ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n  // chatLine.js: 25 emotes: 0.054931640625ms\r\n  // chatLine.js: 25 emotes: 0.002685546875ms\r\n  // chatLine.js: 25 emotes: 0.004150390625ms\r\n\r\n  return msg\r\n}\r\n","let randomcolor = ['#fc5c65', '#fd9644', '#fed330', '#26de81', '#2bcbba', '#eb3b5a', '#fa8231', '#f7b731', '#20bf6b', '#0fb9b1', '#45aaf2', '#4b7bec', '#a55eea', '#d1d8e0', '#778ca3', '#2d98da', '#3867d6', '#8854d0', '#a5b1c2', '#4b6584'] // https://flatuicolors.com/\r\n\r\nexport default () => {\r\n  const index = Math.floor(Math.random() * randomcolor.length)\r\n  const color = randomcolor[index]\r\n  randomcolor.splice(index, 1)\r\n  if (!randomcolor.length) {\r\n    randomcolor = ['#fc5c65', '#fd9644', '#fed330', '#26de81', '#2bcbba', '#eb3b5a', '#fa8231', '#f7b731', '#20bf6b', '#0fb9b1', '#45aaf2', '#4b7bec', '#a55eea', '#d1d8e0', '#778ca3', '#2d98da', '#3867d6', '#8854d0', '#a5b1c2', '#4b6584']\r\n  }\r\n  return color\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport formatEmotes from '../helper/formatEmotes'\r\nimport getRandomColor from '../helper/getRandomColor'\r\n\r\n// eslint-disable-next-line no-control-regex\r\nconst ACTION = /(\\x01ACTION )(.*)(\\x01)/\r\n\r\nclass App extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.emotes = props.emotes\r\n    this.twitchEmotes = props.twitchEmotes\r\n    this.bttvEmotes = props.bttvEmotes\r\n    this.ffzEmotes = props.ffzEmotes\r\n\r\n    this.chan = props.source.chan\r\n    this.msg = props.source.msg\r\n    this.name = props.source.name\r\n    this.tags = props.source.tags\r\n    this.timestamp = props.source.timestamp\r\n\r\n    if (this.msg && this.msg.toLowerCase().indexOf('@' + this.chan) !== -1) {\r\n      this.styleColor = { color: 'red' }\r\n    }\r\n\r\n    const found = ACTION.exec(this.msg)\r\n    if (found !== null) {\r\n      this.msg = found[2]\r\n      this.styleColor = { color: this.tags.color }\r\n    }\r\n\r\n    if (this.tags && this.tags.banDuration) { // ban-duration (Optional) Duration of the timeout, in seconds. If omitted, the ban is permanent.\r\n      this.styleColor = {\r\n        textDecorationLine: 'line-through',\r\n        textDecorationStyle: 'wavy',\r\n        textDecorationColor: 'rgba(255, 193, 7, 0.8)'\r\n      }\r\n    } else if (this.tags && this.tags.banReason) {\r\n      this.styleColor = {\r\n        textDecorationLine: 'line-through',\r\n        textDecorationStyle: 'wavy',\r\n        textDecorationColor: 'rgba(255, 0, 0, 0.8)'\r\n      }\r\n    }\r\n\r\n    if (this.tags && this.tags.emotes) {\r\n      this.msg = formatEmotes({\r\n        msg: this.msg,\r\n        measure: props.measure,\r\n        id: this.tags.id,\r\n        emotesArray: this.tags.emotes,\r\n        emotes: this.emotes,\r\n        twitchEmotes: this.twitchEmotes,\r\n        bttvEmotes: this.bttvEmotes,\r\n        ffzEmotes: this.ffzEmotes,\r\n        chan: this.chan\r\n      })\r\n    }\r\n\r\n    if (this.tags && this.tags.color === true) {\r\n      this.tags.color = getRandomColor()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let banText\r\n    if (this.tags && this.tags.banMsg) {\r\n      banText = <span style={{ fontWeight: 'bold' }} className='line'>{this.tags.banMsg}</span>\r\n    }\r\n\r\n    return (\r\n      <><span className='line' style={this.styleColor}>{this.msg}</span>{banText}</>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const zeroPad2 = (num) => num < 10 ? '0' + num : num\r\nconst zeroPad3 = (num) => {\r\n  if (num < 10) return '00' + num\r\n  else if (num < 100) return '0' + num\r\n  else return num\r\n}\r\nconst _FormatDate = (Datenow = 0, mobile = false) => {\r\n  const date = new Date(Datenow)\r\n\r\n  // 'HH:mm:ss.SSS'\r\n  const HH = zeroPad2(date.getHours())\r\n  const mm = zeroPad2(date.getMinutes())\r\n  const ss = zeroPad2(date.getSeconds())\r\n  const SSS = zeroPad3(date.getMilliseconds())\r\n\r\n  if (!mobile) {\r\n    // 'YYYY-MM-DD HH:mm:ss.SSS'\r\n    const DD = zeroPad2(date.getDate())\r\n    const MM = zeroPad2(date.getMonth())\r\n    const YYYY = date.getFullYear()\r\n    return `${YYYY}-${MM}-${DD} ${HH}:${mm}:${ss}.${SSS}`\r\n  }\r\n\r\n  return `${HH}:${mm}:${ss}.${SSS}`\r\n}\r\n\r\nconst _memoizedFormatDate = (Datenow = 0, mobile) => {\r\n  let cacheInput = 0\r\n  let cacheOutput = ''\r\n  return (Datenow, mobile) => {\r\n    if (cacheInput === Datenow) {\r\n      return cacheOutput\r\n    } else {\r\n      const result = _FormatDate(Datenow, mobile)\r\n      cacheInput = Datenow\r\n      cacheOutput = result\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\nconst FormatDate = _memoizedFormatDate()\r\nexport default FormatDate\r\n","const debug = false\r\nconst timer = false\r\n\r\nexport default function Filter (allLogs, filter) {\r\n  if (debug) console.log('>>>> Filter', allLogs, filter)\r\n  // if (debug) console.log(`::: Filter name '${filter.get('name')}', level '${filter.get('level')}', hostname '${filter.get('hostname')}', msg '${filter.get('msg')}'`)\r\n  if (debug) console.log(`::: Filter channel '${filter.get('channel')}', name '${filter.get('name')}', msg '${filter.get('msg')}'`)\r\n\r\n  if (filter.find(value => value !== '') === undefined) { // if (filter.get('name') === '' && filter.get('level') === '' && filter.get('hostname') === '' && filter.get('msg') === '') {\r\n    if (debug) console.log('Filter return { logs: allLogs, length: allLogs.size }')\r\n    return { logs: allLogs, length: allLogs.size, scrollBottom: true }\r\n  }\r\n  if (timer) console.time('Filter')\r\n  // let LEVEL\r\n  // if (filter.get('level') !== '') {\r\n  //   LEVEL = filter.get('level') + 1\r\n  // }\r\n\r\n  const CHANNEL = filter.get('channel')\r\n\r\n  // filter = filter.set('msg', filter.get('msg').toLowerCase())\r\n  const NAME = filter.get('name')\r\n  // const HOSTNAME = filter.get('hostname')\r\n  const MSG = filter.get('msg').toLowerCase()\r\n\r\n  // if (debug) console.log(`::: Filter name '${NAME}', level '${LEVEL}', hostname '${HOSTNAME}', msg '${MSG}'`)\r\n  if (debug) console.log(`::: Filter channel '${CHANNEL}', name '${NAME}', msg '${MSG}'`)\r\n\r\n  const logs = allLogs.filter(item => {\r\n    // if (LEVEL && item.level !== LEVEL) { // genaue übereinstimmung\r\n    //   return false\r\n    // }\r\n\r\n    // if (LEVEL && item.level >= LEVEL) { // ab diesem Level\r\n    //   return false\r\n    // }\r\n\r\n    if (CHANNEL && item.chan !== CHANNEL) {\r\n      return false\r\n    }\r\n\r\n    if (NAME && item.name !== NAME) {\r\n      return false\r\n    }\r\n\r\n    // if (HOSTNAME && item.hostname !== HOSTNAME) {\r\n    //   return false\r\n    // }\r\n\r\n    if (MSG && item.msg.toLowerCase().indexOf(MSG) === -1) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  })\r\n  if (timer) console.timeEnd('Filter')\r\n  return { logs: logs, length: logs.size }\r\n}\r\n\r\n// export default function Filter (allLogs, filter) {\r\n//   if (debug) console.log('>>>> Filter', allLogs, filter)\r\n//   if (debug) console.log(`::: Filter name '${filter.get('name')}', level '${filter.get('level')}', hostname '${filter.get('hostname')}', msg '${filter.get('msg')}'`)\r\n\r\n//   if (filter.has('name') && filter.has('level') && filter.has('hostname') && filter.has('msg')) {\r\n//     if (debug) console.log('Filter return { logs: allLogs, length: allLogs.size }')\r\n//     return { logs: allLogs, length: allLogs.size, scrollBottom: true }\r\n//   }\r\n\r\n//   if (debug) console.time('Filter')\r\n//   let LEVEL\r\n//   if (filter.has('level')) {\r\n//     LEVEL = filter.get('level') + 1\r\n//   }\r\n\r\n//   const NAME = filter.get('name')\r\n//   const HOSTNAME = filter.get('hostname')\r\n//   const MSG = filter.get('msg').toLowerCase()\r\n\r\n//   if (debug) console.log(`::: Filter name '${NAME}', level '${LEVEL}', hostname '${HOSTNAME}', msg '${MSG}'`)\r\n//   const logs = allLogs.filter(item => {\r\n//     // if (filter.level && item.level !== filter.level) return false // genaue übereinstimmung\r\n\r\n//     if (LEVEL && item.level >= LEVEL) return false // ab diesem Level\r\n\r\n//     if (NAME && item.name !== NAME) return false\r\n\r\n//     if (HOSTNAME && item.hostname !== HOSTNAME) return false\r\n\r\n//     if (MSG && item.msg.toLowerCase().indexOf(MSG) === -1) return false\r\n\r\n//     return true\r\n//   })\r\n//   if (debug) console.timeEnd('Filter')\r\n//   return { logs: logs, length: logs.size }\r\n// }\r\n","/* globals localStorage:true */\n\nimport { createStore } from 'redux'\nimport { List, Map } from 'immutable' // https://immutable-js.github.io/immutable-js/\nimport Filter from './filter'\nimport { refreshCache } from '../components/cache'\n\nimport getRandomColor from '../helper/getRandomColor'\n\n// import parseBadges from '../helper/parseBadges'\n\nconst debug = false\nconst timer = false\n\nexport const update = function (value, type) {\n  if (debug) console.log('update()', { type, value })\n  return ({ type, value })\n}\n\n// let randomcolor = ['#fc5c65', '#fd9644', '#fed330', '#26de81', '#2bcbba', '#eb3b5a', '#fa8231', '#f7b731', '#20bf6b', '#0fb9b1', '#45aaf2', '#4b7bec', '#a55eea', '#d1d8e0', '#778ca3', '#2d98da', '#3867d6', '#8854d0', '#a5b1c2', '#4b6584'] // https://flatuicolors.com/\n// const getRandomColor = () => {\n//   const index = Math.floor(Math.random() * randomcolor.length)\n//   const color = randomcolor[index]\n//   randomcolor.splice(index, 1)\n//   if (!randomcolor.length) {\n//     randomcolor = ['#fc5c65', '#fd9644', '#fed330', '#26de81', '#2bcbba', '#eb3b5a', '#fa8231', '#f7b731', '#20bf6b', '#0fb9b1', '#45aaf2', '#4b7bec', '#a55eea', '#d1d8e0', '#778ca3', '#2d98da', '#3867d6', '#8854d0', '#a5b1c2', '#4b6584']\n//   }\n//   return color\n// }\n\n// https://github.com/koba04/redux-store-structure-patterns/blob/master/patterns/separated-list-store.ts?source=post_page---------------------------#L44\nconst LogReducer = (state = {}, action) => {\n  // console.log(action)\n\n  if (debug) console.log('Reducer action', action)\n  if (debug) console.log('Reducer OLDStore', state)\n\n  if (timer) console.time(action.type)\n  switch (action.type) { // Logs\n    case 'scrollBottom':\n      if (timer) console.timeEnd(action.type)\n      state = {\n        ...state,\n        scrollBottom: action.value\n      }\n      break\n    case 'ADD_DATA':\n      let ChannelColorList = state.settings.get('channelColor') || {}\n      // console.log(action.value)\n\n      for (let i = 0, len = action.value.length; i < len; i++) {\n        if (!ChannelColorList[action.value[i].chan]) ChannelColorList[action.value[i].chan] = getRandomColor()\n\n        // if (action.value[i] && action.value[i].tags && action.value[i].tags.badges) {\n        //   if (action.value[i].tags.badges !== {}) {\n        //     delete action.value[i].tags.badges\n        //     action.value[i].tags.badges = parseBadges(action.value[i].raw)\n        //   }\n        // }\n      }\n\n      // List\n      // const allLogs = state.allLogs.concat(action.value) // 2.008056640625ms\n      const allLogs = state.allLogs.push(...action.value) // 1.783935546875ms\n\n      // Seq\n      // const allLogs = state.allLogs.concat(action.value)\n\n      state.allLogs = allLogs\n      break\n\n    case 'REMOVE_DATA': // Es werden alle gefundenen geändert\n      // console.log('action.value', action.value)\n      // console.time('REMOVE_DATA')\n      const found_ = state.allLogs.findIndex(line => {\n        if (line && line.tags && line.tags.id && line.tags.id === action.value.tags.targetMsgId) {\n          return true\n        }\n        return false\n      })\n\n      if (found_ !== -1) {\n        const temp = state.allLogs.get(found_)\n        state.allLogs = state.allLogs.set(found_, Object.assign({}, temp, { tags: action.value.tags }))\n        console.log('REMOVE_DATA found_', found_, state.allLogs.get(found_))\n      }\n\n      // console.timeEnd('REMOVE_DATA')\n      break\n\n    case 'EDIT_DATA': // Es wird nur ein Eintrag geändert\n      // console.time('EDIT_DATA')\n      state.allLogs.forEach((item, index) => {\n        let i = -1\n        if (item.chan === action.value.chan && item.name === action.value.username) {\n          i = index\n        }\n        if (i !== -1) {\n          const temp = state.allLogs.get(i)\n          state.allLogs = state.allLogs.set(i, Object.assign({}, temp, { tags: action.value.tags }))\n        }\n        return true\n      })\n      // console.timeEnd('EDIT_DATA')\n      break\n\n    case 'ADD_ROOMID':\n      const found = state.channels.findIndex(ele => ele.name === action.value.name)\n      if (found !== -1) {\n        state.channels = state.channels.set(found, action.value)\n        action.value = state.channels\n      }\n      localStorage.setItem('channels', JSON.stringify(action.value.toArray()))\n      return {\n        ...state,\n        channels: action.value\n      }\n    case 'ADD_CHANNEL': // eslint-disable-line\n      // TODO: prüfe obs diesen Channel schon gibt\n      ChannelColorList = state.settings.get('channelColor') || {}\n      if (!(ChannelColorList && ChannelColorList[action.value.name])) ChannelColorList[action.value.name] = getRandomColor()\n      const channels = state.channels.push({ name: action.value.name, roomId: action.value.roomId }) /* roomId is undefined */\n      // localStorage.setItem('channels', JSON.stringify(action.value.toArray()))\n      return {\n        ...state,\n        channels: channels\n      }\n      // break\n    case 'CHANNELS': // eslint-disable-line\n      // console.log('CHANNELS', action.value)\n      localStorage.setItem('channels', JSON.stringify(action.value.toArray()))\n      return {\n        ...state,\n        channels: action.value\n      }\n      // localStorage.setItem('channels', JSON.stringify(action.value.toArray()))\n\n      // // state.channels = action.value\n      // return {\n      //   ...state,\n      //   channels: action.value\n      // }\n      // break\n    case 'UPDATE_EMOTES':\n      // console.log('UPDATE_EMOTES', action, state.emotes)\n      state.emotes[action.value.key] = Map(action.value.value)\n      return {\n        ...state,\n        emotes: state.emotes\n      }\n\n    case 'UPDATE_BADGES':\n      // console.log('UPDATE_BADGES', action, state.badges)\n      state.badges[action.value.key] = Map(action.value.value)\n      return {\n        ...state,\n        badges: state.badges\n      }\n    default:\n  }\n\n  // Filter\n  switch (action.type) { // TODO scrollbottom\n    case 'ADD_FILTER_channel':\n      state.filter = state.filter.set('channel', action.value)\n      break\n    case 'ADD_FILTER_name':\n      state.filter = state.filter.set('name', action.value)\n      break\n    case 'ADD_FILTER_msg':\n      state.filter = state.filter.set('msg', action.value)\n      break\n\n    default:\n  }\n\n  switch (action.type) { // Filter übernehmen\n    case 'ADD_FILTER_name':\n    case 'ADD_FILTER_channel':\n    case 'ADD_FILTER_msg':\n    case 'scrollBottom':\n    case 'ADD_DATA':\n      // TODO: wenn 'state.scrollBottom' === false ist sollte er auch keine Zeilen löschen wenn das 'maxLines' erreicht ist\n      // wenn alle Filter === '' sind sollte er wieder nach unten scrollen\n      // man sollte die Filter benutzen können auch wenn nicht 'state.scrollBottom' === true ist\n      const FILTER = (action.type === 'ADD_FILTER_name' || action.type === 'ADD_FILTER_channel' || action.type === 'ADD_FILTER_msg')\n      if (state.scrollBottom || FILTER) {\n        let { logs, length, scrollBottom } = Filter(state.allLogs, state.filter)\n        const maxLines = Number(state.settings.get('maxLines'))\n\n        if (length > maxLines) { // https://github.com/spddl/react_logein/blob/master/src/store/index.js#L91\n          const _10percent = 10 * maxLines / 100\n          const _maxLines = maxLines - _10percent\n\n          state.allLogs = state.allLogs.takeLast(_maxLines)\n          logs = logs.takeLast(_maxLines)\n          length = _maxLines\n          refreshCache() // Damit der Index der Zeilen als Key für den Cache verwendet werden kann\n        }\n\n        if (timer) console.timeEnd(action.type)\n        return {\n          ...state,\n          scrollBottom: scrollBottom || state.scrollBottom,\n          logs,\n          length\n        }\n      } else {\n        if (state.filter.find(value => value !== '') === undefined) { // Wenn kein Filter gesetzt ist\n          if (timer) console.timeEnd(action.type)\n          return { // nach unten scrollen\n            ...state,\n            // scrollBottom: true,\n            logs: state.allLogs,\n            length: state.allLogs.size\n          }\n        } else {\n          if (timer) console.timeEnd(action.type)\n          return { ...state } // 'FREEZE' Die Daten werden nicht geändert\n        }\n      }\n    default:\n  }\n\n  // Settings\n  switch (action.type) {\n    case 'channelColor':\n      const newColor = action.value\n      action.value = {\n        ...state.settings.get(action.type),\n        ...newColor\n      }\n    case 'modalShow': // eslint-disable-line\n    case 'twitchBadges':\n    case 'bttvBadges':\n    case 'twitchEmotes':\n    case 'bttvEmotes':\n    case 'ffzEmotes':\n    case 'fontClass':\n    case 'fontSize':\n    case 'rowHeight':\n    case 'appShow':\n    case 'hostnameShow':\n    case 'maxLines':\n      if (isNaN(!action.value)) action.value = Number(action.value)\n      const settings = state.settings.set(action.type, action.value)\n      state = {\n        ...state,\n        settings\n      }\n      localStorage.setItem('settings', JSON.stringify(settings.toObject()))\n      break\n    default:\n  }\n\n  if (timer) console.timeEnd(action.type)\n  if (debug) console.log('Reducer NEWStore', state)\n  return state\n}\n\nconst initialState = {\n  allLogs: List(), // https://immutable-js.github.io/immutable-js/docs/#/List\n  logs: List(),\n  length: 0,\n  scrollBottom: true,\n  filter: Map({\n    name: '',\n    level: '',\n    hostname: '',\n    msg: ''\n  }),\n  // settings: Map({ // https://immutable-js.github.io/immutable-js/docs/#/Map\n  settings: Map(JSON.parse(localStorage.getItem('settings')) || {\n    modalShow: false, // true,\n\n    twitchBadges: true,\n    bttvBadges: true,\n\n    twitchEmotes: true,\n    bttvEmotes: true,\n    ffzEmotes: true,\n\n    fontClass: 'inconsolata-font',\n    fontSize: 13,\n    rowHeight: 19,\n    maxLines: 50000,\n    channelColor: {}\n  }),\n  channels: List(JSON.parse(localStorage.getItem('channels')) || []),\n  badges: {\n    global: Map()\n  },\n  emotes: {\n    global: Map()\n  }\n}\n\nexport const store = createStore(\n  LogReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n// process.env.NODE_ENV !== 'production' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n","import React, { PureComponent } from 'react'\r\n\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer'\r\nimport List from 'react-virtualized/dist/commonjs/List'\r\nimport CellMeasurer from 'react-virtualized/dist/commonjs/CellMeasurer'\r\n\r\nimport { cache, refreshCache } from './cache'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport '../TableStyles.css'\r\nimport _debounce from 'lodash.debounce'\r\n\r\n// import anchorme from 'anchorme'\r\n\r\nimport ChatLine from './chatLine'\r\n\r\nimport FormatDate from '../helper/FormatDate'\r\n// import formatEmotes from '../helper/formatEmotes'\r\n// import getRandomColor from '../helper/getRandomColor'\r\n// import classifierNumber from '../helper/classifierNumber'\r\n// import LevelColor from '../helper/colors'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../redux'\r\n\r\nconst debug = false\r\n\r\n// Limitations and Performance Considerations // https://github.com/bvaughn/react-virtualized/blob/a41ff4857ea08c604db3a64f556ff08135cfbfcc/docs/CellMeasurer.md\r\n// Performance\r\n// Measuring a column's width requires measuring all rows in order to determine the widest occurrence of that column. The same is true in reverse for measuring \r\n// a row's height.For this reason it may not be a good idea to use this HOC for Grids containing a large number of both columns and cells.\r\n\r\n// Since this component measures one cell at a time to determine it's width/height, it will likely be slow if a user skips many rows (or columns) at once \r\n// by scrolling with a scrollbar or via a scroll-to-cell prop. There is (unfortunately) no workaround for this performance limitation at the moment.\r\n\r\nconst getBrowserHiddenProps = () => {\r\n  let hidden, visibilityChange\r\n  if (typeof document.hidden !== 'undefined') {\r\n    hidden = 'hidden'\r\n    visibilityChange = 'visibilitychange'\r\n  } else if (typeof document.msHidden !== 'undefined') {\r\n    hidden = 'msHidden'\r\n    visibilityChange = 'msvisibilitychange'\r\n  } else if (typeof document.webkitHidden !== 'undefined') {\r\n    hidden = 'webkitHidden'\r\n    visibilityChange = 'webkitvisibilitychange'\r\n  }\r\n\r\n  return {\r\n    hidden,\r\n    visibilityChange\r\n  }\r\n}\r\n\r\nclass LogContainer extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    if (debug) console.log('LogContainer constructor', props)\r\n    \r\n\r\n    this.bindListRef = React.createRef()\r\n\r\n    this.state = {\r\n      mobile: window.innerWidth < 640,\r\n      scrollBottom: true\r\n    }\r\n\r\n    this.updateFilter = this.updateFilter.bind(this)\r\n\r\n    const { hidden, visibilityChange } = getBrowserHiddenProps() // https://dev.to/hurricaneinteractive/guilt-users-into-coming-back-with-your-document-title-55kn\r\n\r\n    if (typeof document.addEventListener !== 'undefined' && typeof hidden !== 'undefined') {\r\n      document.addEventListener(visibilityChange, () => {\r\n        if (!document[hidden]) {\r\n          refreshCache()\r\n          // if (this.bindListRef.current) {\r\n          //   this.bindListRef.current.forceUpdateGrid()\r\n          // }\r\n        }\r\n      }, false)\r\n    }\r\n  }\r\n\r\n  // bindListRef = ref => { this.list = ref } // eslint-disable-line\r\n\r\n  componentDidMount() {\r\n    if (debug) console.log('componentDidMount()')\r\n    if (this.bindListRef.current) {\r\n      this.bindListRef.current.forceUpdateGrid()\r\n    }\r\n    window.addEventListener('resize', _debounce(() => this.handleResize(window.innerWidth), 100))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    try {\r\n      window.removeResizeListener('resize', _debounce(() => this.handleResize(window.innerWidth), 100))\r\n    } catch (error) { }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState, _snapshot) { // https://stackoverflow.com/a/51770376\r\n    if (debug) console.log('componentDidUpdate()')\r\n    // if (debug) console.log(`${this.state.scrollBottom} && ${this.props.length} !== ${prevProps.length}`)\r\n\r\n    if (this.props.length !== prevProps.length) {\r\n      if (this.props.scrollBottom) { // if (this.state.scrollBottom) {\r\n        const length = this.props.length\r\n        this.bindListRef.current.scrollToRow(length)\r\n        // if (debug) console.log(`1-this.bindListRef.current.scrollToRow(${length})`)\r\n        this.setState({ _scrollingToRow: length }, () => {\r\n          this.bindListRef.current.scrollToRow(length)\r\n          // if (debug) console.log(`2-this.bindListRef.current.scrollToRow(${length})`)\r\n        })\r\n      }\r\n\r\n      if (this.props.filter !== prevProps.filter) {\r\n        refreshCache() // jedes mal wenn ein Filter geändert wird\r\n        // für mehr performance bräuchte man eine UUID\r\n      }\r\n    }\r\n  }\r\n\r\n  handleResize = (innerWidth) => {\r\n    if (debug) console.log('handleResize()')\r\n    if (innerWidth < 640) this.setState({ mobile: true })\r\n    else this.setState({ mobile: false })\r\n\r\n    refreshCache()\r\n    if (this.bindListRef.current) {\r\n      this.bindListRef.current.forceUpdateGrid()\r\n    }\r\n  }\r\n\r\n  listenScrollEvent = ({ scrollHeight, scrollTop, clientHeight }) => {\r\n    if (debug) console.log(`listenScrollEvent() if ((${scrollHeight} - ${scrollTop}) === ${clientHeight})`)\r\n    if (scrollHeight === 0 && scrollTop === 0) return\r\n\r\n    if ((scrollHeight - scrollTop) === clientHeight) {\r\n      if (!this.props.scrollBottom) this.props.update(true, 'scrollBottom')\r\n    } else {\r\n      if (this.props.scrollBottom) this.props.update(false, 'scrollBottom')\r\n    }\r\n  }\r\n\r\n  updateFilter(userInput, type) {\r\n    if (debug) console.log('updateFilter()', userInput, type)\r\n    if (this.props.filter[type] === userInput) userInput = ''\r\n    this.props.update(userInput, 'ADD_FILTER_' + type)\r\n  }\r\n\r\n  classifierLevel(row) {\r\n    // const { result, classcolor } = helper.classifierLevel(cellData)\r\n    return <span onClick={() => this.updateFilter(row.chan, 'channel')}>{row.chan}</span>\r\n  }\r\n\r\n  UserNameRenderer = (row) => {\r\n    return <span className='username' onClick={() => this.updateFilter(row.name, 'name')} style={{ color: (row && row.tags && row.tags.color ? row.tags.color : '#EEE') }}>{row.name}</span>\r\n  }\r\n\r\n  decamelize = (text) => {\r\n    return text\r\n      .replace(/([a-z\\d])([A-Z])/g, '$1-$2')\r\n      .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1-$2')\r\n      .toLowerCase()\r\n  }\r\n\r\n  createBadge = ({ measure, name, badge, tags }) => {\r\n    // console.log('1createBadge', name, badge, tags)\r\n    switch (name) {\r\n      case 'subscriber':\r\n        if (badge.versions[tags.badges.subscriber]) {\r\n          badge = badge.versions[tags.badges.subscriber]\r\n        } else {\r\n          badge = Object.keys(badge.versions)[0]\r\n        }\r\n        break\r\n\r\n      case 'bits':\r\n        if (badge.versions[tags.badges.bits]) {\r\n          badge = badge.versions[tags.badges.bits]\r\n        } else {\r\n          badge = Object.keys(badge.versions)[0]\r\n        }\r\n        break\r\n\r\n      default:\r\n        if (badge.versions['0']) badge = badge.versions['0']\r\n        else if (badge.versions['1']) badge = badge.versions['1']\r\n        else badge = Object.keys(badge.versions)[0]\r\n    }\r\n    // console.log('2createBadge', badge)\r\n    \r\n    try {\r\n      return <img\r\n        onLoad={measure}\r\n        key={name || ''}\r\n        title={badge.title || ''}\r\n        alt={badge.title || ''}\r\n        aria-label={badge.title || ''}\r\n        className='line'\r\n        src={badge.image_url_1x}\r\n        srcSet={`${badge.image_url_1x} 1x, ${badge.image_url_2x} 2x, ${badge.image_url_4x} 4x`}\r\n      ></img>\r\n    } catch (error) {\r\n      console.warn(error)\r\n      return <img\r\n        onLoad={measure}\r\n        key={name}\r\n        alt={name}\r\n        className='line'\r\n      ></img>\r\n    }\r\n  }\r\n\r\n  createBadgeTags = ({ source, measure }) => {\r\n    let badges = []\r\n    if (source && source.tags && source.tags.badges) {\r\n\r\n      for (let name in source.tags.badges) {\r\n        if (source.tags.badges.hasOwnProperty(name)) {\r\n          let element\r\n\r\n          // https://discuss.dev.twitch.tv/t/how-to-get-emotes-badges-object/18916/2\r\n          if (this.props.badges[source.chan] && this.props.badges[source.chan].has(name)) {\r\n            // console.log(`this.props.badges[${source.chan}].has(${name})`)\r\n            const badge = this.props.badges[source.chan].get(name)\r\n            element = this.createBadge({ measure, name, badge, tags: source.tags })\r\n          } else if (this.props.badges.global.has(name)) {\r\n            // console.log(`this.props.badges.global.has(${name})`)\r\n            const badge = this.props.badges.global.get(name)\r\n            element = this.createBadge({ measure, name, badge, tags: source.tags })\r\n          } else {\r\n            element = <span className='line badge badge-primary' key={name} title={name}>{name}</span>\r\n          }\r\n          badges.push(element)\r\n        }\r\n      }\r\n    }\r\n    \r\n    return badges\r\n  }\r\n\r\n  render() {\r\n    if (debug) console.log('LogContainer RENDER', this.props, '############################################')\r\n\r\n    let scrollButton = ''\r\n    if (!this.props.scrollBottom) { // TODO: nur wenn man auch scrollen kann\r\n      scrollButton = <Button variant='secondary' id='scrollDown' onClick={() => {\r\n        this.bindListRef.current.scrollToRow(this.props.length)\r\n        this.props.update(true, 'scrollBottom')\r\n        refreshCache()\r\n      }}>scroll down</Button>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div style={{\r\n          height: 'calc(100vh - 60px)',\r\n          fontSize: Number(this.props.settings.get('fontSize')),\r\n          fontFamily: `'${this.props.settings.get('fontClass')}', monospace`\r\n        }} className={'bg-dark text-list'}>\r\n\r\n          <AutoSizer>\r\n            {({ height, width }) => (\r\n\r\n              <List\r\n                id='list'\r\n                // height={window.innerHeight - 60}\r\n                // width={window.innerWidth - 3}\r\n                height={height}\r\n                width={width - 3}\r\n                overscanColumnCount={0}\r\n                overscanRowCount={10}\r\n                scrollingResetTimeInterval={0}\r\n                ref={this.bindListRef}\r\n                rowCount={this.props.length}\r\n                deferredMeasurementCache={cache}\r\n                onScroll={this.listenScrollEvent}\r\n                rowHeight={cache.rowHeight}\r\n                noRowsRenderer={() => <div><center><i>Nichts gefunden</i></center></div>}\r\n                rowRenderer={({ // https://github.com/bvaughn/react-virtualized/blob/8738097a6ead422f74590d6a631bd5fd83ebc831/docs/List.md#rowrenderer\r\n                  index,       // Index of row\r\n                  // isScrolling, // The List is currently being scrolled\r\n                  // isVisible,   // This row is visible within the List (eg it is not an overscanned row)\r\n                  _key,         // Unique key within array of rendered rows\r\n                  parent,      // Reference to the parent List (instance)\r\n                  style        // Style object to be applied to row (to position it);\r\n                  // This must be passed through to the rendered row element.\r\n                }) => {\r\n                  let key\r\n                  const source = this.props.logs.get(index) // This comes from your list data\r\n                  if (source.tags && source.tags.id) {\r\n                    key = source.tags.id\r\n                  } else {\r\n                    key = _key || index\r\n                  }\r\n\r\n                  const channelStyle = this.props.settings.get('channelColor') && this.props.settings.get('channelColor')[source.chan] ? { backgroundColor: this.props.settings.get('channelColor')[source.chan] } : {}\r\n                  const channel = <><span className='line badge badge-primary' style={channelStyle} onClick={() => this.updateFilter(source.chan, 'channel')}>{source.chan}</span></>\r\n\r\n                  return (\r\n                    <CellMeasurer // https://github.com/bvaughn/react-virtualized/blob/master/docs/CellMeasurer.md\r\n                      cache={cache}\r\n                      columnIndex={0}\r\n                      key={key}\r\n                      parent={parent}\r\n                      rowIndex={index}\r\n                    >\r\n                      {({ measure }) => (\r\n\r\n                        <div\r\n                          key={key}\r\n                          style={{\r\n                            ...style,\r\n                            padding: '.3rem', // '.5rem 2rem',\r\n                            wordWrap: 'break-word',\r\n                            lineHeight: '20px'\r\n                          }}\r\n                        >\r\n                          <span>{FormatDate(source.timestamp, this.state.mobile)}</span>:\r\n                          {channel}\r\n                          {(this.props.settings.get('twitchEmotes') ? this.createBadgeTags({ source, measure }) : '')} {/* // TODO: twitchBadges wäre richtig */}\r\n                          {this.UserNameRenderer(source)}\r\n                          <ChatLine\r\n                            source={source}\r\n                            emotes={this.props.emotes}\r\n                            twitchEmotes={this.props.settings.get('twitchEmotes')}\r\n                            bttvEmotes={this.props.settings.get('bttvEmotes')}\r\n                            ffzEmotes={this.props.settings.get('ffzEmotes')}\r\n                            measure={measure}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </CellMeasurer>\r\n                  )\r\n\r\n                }}\r\n              />\r\n\r\n            )}\r\n          </AutoSizer>\r\n\r\n          {scrollButton}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    scrollBottom: state.scrollBottom,\r\n    logs: state.logs,\r\n    length: state.length,\r\n    filter: state.filter,\r\n    settings: state.settings,\r\n    badges: state.badges,\r\n    emotes: state.emotes\r\n  }), // mapStateToProps\r\n  { update } // mapDispatchToProps\r\n)(LogContainer)\r\n","import React, { PureComponent } from 'react'\n\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nimport Collapse from 'react-bootstrap/Collapse'\n\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Alert from 'react-bootstrap/Alert'\n\nimport { connect } from 'react-redux'\nimport { update } from '../redux'\n\nconst debug = false\n\nclass SettingsModal extends PureComponent {\n  constructor (props, context) {\n    super(props, context)\n\n    this.handleShow = this.handleShow.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n\n    this.state = {\n      restart: false,\n      temp: '',\n      addChannel: ''\n    }\n  }\n\n  handleShow () {\n    this.props.update(true, 'modalShow')\n  }\n\n  handleClose () {\n    this.props.update(false, 'modalShow')\n  }\n\n  handleChange ({ target }) {\n    this.setState({ addChannel: target.value })\n  }\n\n  render () {\n    if (debug) console.log('SettingsContainer RENDER', this.props, '############################################')\n\n    const channelColor = []\n    this.props.channels.forEach((channel) => {\n      channelColor.push(\n        <InputGroup key={channel.name} className='mb-3'>\n          <InputGroup.Prepend>\n            <InputGroup.Text>{channel.name}</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            key={channel.name}\n            type='color'\n            name={channel.name}\n            defaultValue={this.props.settings.get('channelColor')[channel.name]}\n            onChange={({ target }) => {\n              this.props.update({ [target.name]: target.value }, 'channelColor')\n            }}\n          />\n          <InputGroup.Append>\n            <Button\n              variant='outline-danger'\n              onClick={() => {\n                let channels = this.props.channels\n                const index = channels.indexOf(channel) // https://immutable-js.github.io/immutable-js/docs/#/List/indexOf\n                if (index > -1) {\n                  channels = channels.splice(index, 1) // https://immutable-js.github.io/immutable-js/docs/#/List/slice\n                }\n                this.props.update(channels, 'CHANNELS')\n              }}\n            >X</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      )\n    })\n\n    return (\n      <>\n        <Button variant='outline-secondary' onClick={this.handleShow}>\n          <span role='img' aria-label='Gear'>⚙</span>\n        </Button>\n\n        <Modal\n          size='lg'\n          show={this.props.settings.get('modalShow')}\n          onHide={this.handleClose}\n          scrollable\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Einstellungen</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Collapse in={this.state.restart}>\n              <div onClick={() => { window.location.reload() }}>\n                <Alert variant='danger'>\n                  Webseite Aktualisieren notwenig (F5)\n                </Alert>\n              </div>\n            </Collapse>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm='1'>Font</Form.Label>\n\n              <Col sm='11'>\n                <Form.Control\n                  as='select'\n                  name='fontClass'\n                  value={this.props.settings.get('fontClass')}\n                  onChange={({ target }) => { this.props.update(target.value, 'fontClass') }}\n                >\n                  <option value='Arimo'>Arimo</option>\n                  <option value='Hind'>Hind</option>\n                  <option value='IBM Plex Sans'>IBM Plex Sans</option>\n                  <option value='Montserrat'>Montserrat</option>\n                  <option value='Muli'>Muli</option>\n                  <option value='Nunito Sans'>Nunito Sans</option>\n                  <option value='Gothic A1'>Gothic A1</option>\n                  <option value='Roboto'>Roboto</option>\n                  <option value='Rubik'>Rubik</option>\n                  <option value='Source Sans Pro'>Source Sans Pro</option>\n                  <option value='Poppins'>Poppins</option>\n                  <option value='Open Sans'>Open Sans</option>\n                  <option value='Work Sans'>Work Sans</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <InputGroup className='mb-3'>\n              <InputGroup.Prepend>\n                <InputGroup.Text id='basic-addon1'>Font Size</InputGroup.Text>\n              </InputGroup.Prepend>\n\n              <FormControl\n                type='number'\n                placeholder='Font Size'\n                aria-label='Font Size'\n                name='fontSize'\n                onChange={({ target }) => { this.props.update(target.value, target.name) }}\n                defaultValue={this.props.settings.get('fontSize')}\n                min='6'\n                max='30'\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>px</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <InputGroup className='mb-3'>\n              <InputGroup.Prepend>\n                <InputGroup.Text>Row Height</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                type='number'\n                placeholder='Row Height'\n                aria-label='Row Height'\n                name='rowHeight'\n                onChange={({ target }) => {\n                  this.props.update(target.value, target.name)\n                  this.setState({ restart: true })\n                }}\n                defaultValue={this.props.settings.get('rowHeight')}\n                min='3'\n                max='60'\n              />\n              <InputGroup.Append>\n                <InputGroup.Text>px</InputGroup.Text>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <InputGroup className='mb-3'>\n              <InputGroup.Prepend>\n                <InputGroup.Text>Max Lines</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n                type='number'\n                placeholder='Max Lines'\n                aria-label='Max Lines'\n                onChange={({ target }) => {\n                  this.props.update(target.value, target.name)\n                  this.setState({ restart: true })\n                }}\n                name='maxLines'\n                defaultValue={this.props.settings.get('maxLines')}\n                min='1'\n              />\n            </InputGroup>\n\n            <Form.Group as={Row}>\n              <Form.Label column md='3' lg>Zeige Badges von:</Form.Label>\n\n              <Col md='auto'>\n                <Form.Check\n                  inline\n                  custom\n                  type='switch'\n                  id='checkbox-twitchBadges'\n                  label='Twitch'\n                  name='twitchBadges'\n                  defaultChecked={this.props.settings.get('twitchBadges')}\n                  onChange={({ target }) => { this.props.update(target.checked, target.name) }}\n                />\n\n                <Form.Check\n                  inline\n                  custom\n                  type='switch'\n                  id='checkbox-bttvBadges'\n                  label='BTTV'\n                  name='bttvBadges'\n                  defaultChecked={this.props.settings.get('bttvBadges')}\n                  onChange={({ target }) => { this.props.update(target.checked, target.name) }}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column md='3' lg>Zeige Emotes von:</Form.Label>\n\n              <Col md='auto'>\n                <Form.Check\n                  inline\n                  custom\n                  type='switch'\n                  id='checkbox-twitchEmotes'\n                  label='Twitch'\n                  name='twitchEmotes'\n                  // defaultChecked={this.props.settings.get('showBadges')}\n                  defaultChecked={this.props.settings.get('twitchEmotes')}\n                  onChange={({ target }) => { this.props.update(target.checked, target.name) }}\n                />\n\n                <Form.Check\n                  inline\n                  custom\n                  type='switch'\n                  id='checkbox-bttvEmotes'\n                  label='BTTV'\n                  name='bttvEmotes'\n                  // defaultChecked={this.props.settings.get('bttvBadges')}\n                  defaultChecked={this.props.settings.get('bttvEmotes')}\n                  onChange={({ target }) => { this.props.update(target.checked, target.name) }}\n                />\n\n                <Form.Check\n                  inline\n                  custom\n                  type='switch'\n                  id='checkbox-ffzEmotes'\n                  label='FrankerFaceZ'\n                  name='ffzEmotes'\n                  // defaultChecked={this.props.settings.get('ffzBadges')}\n                  defaultChecked={this.props.settings.get('ffzEmotes')}\n                  onChange={({ target }) => { this.props.update(target.checked, target.name) }}\n                />\n              </Col>\n            </Form.Group>\n\n            {channelColor}\n\n            <InputGroup className='mb-3'>\n              <FormControl // https://reactjs.org/docs/forms.html#controlled-components\n                placeholder='add Channel'\n                aria-label='add Channel'\n                aria-describedby='basic-addon9'\n                // defaultValue={this.temp}\n                value={this.state.addChannel}\n                onChange={this.handleChange}\n\n                // value={this.state.addChannel}\n                // onChange={({ target }) => {\n                //   // this.setState({ addChannel: target.value })\n                //   this.setState({ addChannel: { name: target.value, roomId: undefined } })\n                // }}\n                // TODO: onEnter: () =>\n              />\n              <InputGroup.Append>\n                <Button\n                  variant='outline-success'\n                  onClick={() => {\n                    // const channels = this.props.channels.push({ name: this.state.addChannel.toLowerCase(), roomId: undefined })\n                    this.props.update({ name: this.state.addChannel.toLowerCase(), roomId: undefined }, 'ADD_CHANNEL') // TODO: Gleich mit neue Farbe übergeben\n                    this.setState({ addChannel: '' })\n                  }}\n                >Add</Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={this.handleClose}>\n              Schliessen\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    settings: state.settings,\n    channels: state.channels\n  }), // mapStateToProps\n  { update } // mapDispatchToProps\n)(SettingsModal)\n","import React, { PureComponent } from 'react'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\n\r\n// import classifierLevel from '../helper/classifierLevel'\r\n// import classifierNumber from '../helper/classifierNumber'\r\n// import LevelColor from '../helper/colors'\r\n\r\nimport SettingsModal from './Settings'\r\nimport { addUrlProps, UrlQueryParamTypes, configureUrlQuery } from 'react-url-query' // https://github.com/pbeshai/react-url-query\r\n\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../redux'\r\n\r\nconst debug = false\r\n\r\nfunction debounce (fn, delay) {\r\n  let timer = null\r\n  return function () {\r\n    let context = this\r\n    let args = arguments\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      fn.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconfigureUrlQuery({\r\n  history,\r\n  addChangeHandlers: true\r\n})\r\n\r\nconst urlPropsQueryConfig = {\r\n  // QueryApp: { type: UrlQueryParamTypes.string, queryParam: 'app' },\r\n  // QueryHostname: { type: UrlQueryParamTypes.string, queryParam: 'hostname' },\r\n  // QueryLvl: { type: UrlQueryParamTypes.string, queryParam: 'lvl' },\r\n  QueryChannel: { type: UrlQueryParamTypes.string, queryParam: 'channel' },\r\n  QueryName: { type: UrlQueryParamTypes.string, queryParam: 'name' },\r\n  QueryMsg: { type: UrlQueryParamTypes.string, queryParam: 'msg' }\r\n}\r\n\r\nclass TopBar extends PureComponent {\r\n  constructor (props) {\r\n    super(props)\r\n    if (debug) console.log('TopBar', props)\r\n\r\n    this.state = {}\r\n    this.timer = {}\r\n    this.updateFilter = this.updateFilter.bind(this)\r\n    // this.updateDebounceFilter = debounce(this.updateDebounceFilter, 150) // https://stackoverflow.com/a/48702173\r\n    this.updateDebounceFilter = debounce(this.updateFilter, 150) // https://stackoverflow.com/a/48702173\r\n\r\n    this.onWheelHandler = this.onWheelHandler.bind(this)\r\n    this.onTouchMoveHandler = this.onTouchMoveHandler.bind(this)\r\n    this.onTouchStartHandler = this.onTouchStartHandler.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    if (this.props.QueryChannel) this.props.update(this.props.QueryHostname, 'ADD_FILTER_channel')\r\n    if (this.props.QueryName) this.props.update(this.props.QueryApp, 'ADD_FILTER_name')\r\n    if (this.props.QueryMsg) this.props.update(this.props.QueryMsg, 'ADD_FILTER_msg')\r\n    // if (this.props.QueryHostname) this.props.update(this.props.QueryHostname, 'ADD_FILTER_hostname')\r\n    // if (this.props.QueryLvl) {\r\n    //   const lvl = isNaN(this.props.QueryLvl) ? classifierLevel(this.props.QueryLvl.toUpperCase()) : this.props.QueryLvl\r\n    //   this.props.update(lvl, 'ADD_FILTER_level')\r\n    // }\r\n  }\r\n\r\n  updateFilter (userInput, type) {\r\n    this.props.update(userInput, 'ADD_FILTER_' + type)\r\n    switch (type) {\r\n      case 'channel': this.props.onChangeQueryChannel(userInput); break\r\n      case 'name': this.props.onChangeQueryName(userInput); break\r\n      case 'msg': this.props.onChangeQueryMsg(userInput); break\r\n      // case 'hostname': this.props.onChangeQueryHostname(userInput); break\r\n      // case 'level': this.props.onChangeQueryLvl(userInput); break\r\n      default:\r\n    }\r\n  }\r\n\r\n  // updateDebounceFilter (userInput, type) {\r\n  //   this.props.update(userInput, 'ADD_FILTER_' + type)\r\n  //   switch (type) {\r\n  //     case 'name': this.props.onChangeQueryApp(userInput); break\r\n  //     case 'hostname': this.props.onChangeQueryHostname(userInput); break\r\n  //     case 'level': this.props.onChangeQueryLvl(userInput); break\r\n  //     case 'msg': this.props.onChangeQueryMsg(userInput); break\r\n  //     default:\r\n  //   }\r\n  // }\r\n\r\n  updateFilterNext (type, up) {\r\n    if (debug) console.log('updateFilterNext', { type, up })\r\n    switch (type) {\r\n      // case 'hostname':\r\n      //   const HostanameArray = Object.keys(this.props.settings.get('hostnameColor'))\r\n      //   if (HostanameArray.length !== 1) {\r\n      //     const index = HostanameArray.indexOf(this.props.filter.get('hostname'))\r\n      //     let nextIndex\r\n      //     if (up) {\r\n      //       nextIndex = index - 1\r\n      //       if (HostanameArray[nextIndex] === undefined) nextIndex = HostanameArray.length - 1\r\n      //     } else {\r\n      //       nextIndex = index + 1\r\n      //       if (HostanameArray[nextIndex] === undefined) nextIndex = 0\r\n      //     }\r\n      //     this.updateFilter(HostanameArray[nextIndex], type)\r\n      //   }\r\n      //   break\r\n\r\n      case 'channel':\r\n        const ChannelArray = Object.keys(this.props.settings.get('channelColor'))\r\n        console.log({ ChannelArray })\r\n\r\n        if (ChannelArray.length !== 1) {\r\n          const index = ChannelArray.indexOf(this.props.filter.get('channel'))\r\n          let nextIndex\r\n          if (up) {\r\n            nextIndex = index - 1\r\n            if (ChannelArray[nextIndex] === undefined) nextIndex = ChannelArray.length - 1\r\n          } else {\r\n            nextIndex = index + 1\r\n            if (ChannelArray[nextIndex] === undefined) nextIndex = 0\r\n          }\r\n          this.updateFilter(ChannelArray[nextIndex], type)\r\n        }\r\n        break\r\n\r\n      case 'name':\r\n        const AppArray = Object.keys(this.props.settings.get('appColor')) // TODO: das kommt direkt aus der Line\r\n        if (AppArray.length !== 1) {\r\n          const index = AppArray.indexOf(this.props.filter.get('name'))\r\n          let nextIndex\r\n          if (up) {\r\n            nextIndex = index - 1\r\n            if (AppArray[nextIndex] === undefined) nextIndex = AppArray.length - 1\r\n          } else {\r\n            nextIndex = index + 1\r\n            if (AppArray[nextIndex] === undefined) nextIndex = 0\r\n          }\r\n          this.updateFilter(AppArray[nextIndex], type)\r\n        }\r\n        break\r\n\r\n        // case 'level':\r\n        //   let level = this.props.filter.get('level')\r\n        //   if (up) level = level - 1\r\n        //   else level = level + 1\r\n        //   this.updateFilter(level, type)\r\n        //   break\r\n\r\n      default:\r\n        console.warn('updateFilterNext:', type)\r\n    }\r\n  }\r\n\r\n  onWheelHandler ({ deltaY }, type) {\r\n    let up\r\n    if (deltaY > 0) up = false\r\n    else up = true\r\n    this.updateFilterNext(type, up)\r\n  }\r\n\r\n  onTouchMoveHandler ({ touches }, type) {\r\n    if (!this.state.touchReset) {\r\n      const t = touches[0]\r\n      let up\r\n      if (t.pageY - this.state.touchY > 0) up = false\r\n      else up = true\r\n      this.setState({ touchReset: true })\r\n      this.updateFilterNext(type, up)\r\n    }\r\n  }\r\n\r\n  onTouchStartHandler ({ touches }) {\r\n    const t = touches[0]\r\n    this.setState({ touchY: t.pageY, touchReset: false })\r\n  }\r\n\r\n  render () {\r\n    if (debug) console.log('TopbarContainer RENDER', this.props, '############################################')\r\n\r\n    let channel = ''\r\n    if (this.props.filter.get('channel') !== '') {\r\n      const appStyle = this.props.settings.get('channelColor') && this.props.settings.get('channelColor')[this.props.filter.get('channel')] ? { backgroundColor: this.props.settings.get('channelColor')[this.props.filter.get('channel')] } : {}\r\n      channel = <Badge\r\n        variant='secondary'\r\n        ref='app'\r\n        style={{ ...appStyle, margin: '0 5px 5px', touchAction: 'pan-down' }}\r\n        onClick={() => this.updateFilter('', 'channel')}\r\n        onWheel={(e) => this.onWheelHandler(e, 'channel')}\r\n        onTouchMove={(e) => this.onTouchMoveHandler(e, 'channel')}\r\n        onTouchStart={this.onTouchStartHandler}\r\n      >{this.props.filter.get('channel')}</Badge>\r\n\r\n      this.props.onChangeQueryChannel(this.props.filter.get('channel'))\r\n    }\r\n\r\n    let name = ''\r\n    if (this.props.filter.get('name') !== '') {\r\n      const appStyle = this.props.settings.get('appColor') && this.props.settings.get('appColor')[this.props.filter.get('name')] ? { color: this.props.settings.get('appColor')[this.props.filter.get('name')] } : {}\r\n      name = <Badge\r\n        variant='secondary'\r\n        ref='app'\r\n        style={{ ...appStyle, margin: '0 5px 5px', touchAction: 'pan-down' }}\r\n        onClick={() => this.updateFilter('', 'name')}\r\n        onWheel={(e) => this.onWheelHandler(e, 'name')}\r\n        onTouchMove={(e) => this.onTouchMoveHandler(e, 'name')}\r\n        onTouchStart={this.onTouchStartHandler}\r\n      >{this.props.filter.get('name')}</Badge>\r\n\r\n      this.props.onChangeQueryName(this.props.filter.get('name'))\r\n    }\r\n\r\n    // let lvl = ''\r\n    // if (this.props.filter.get('level') !== '') {\r\n    //   const level = classifierNumber(this.props.filter.get('level'))\r\n    //   lvl = <Badge\r\n    //     variant='secondary'\r\n    //     className={'line'}\r\n    //     ref='lvl'\r\n    //     style={{ ...LevelColor[level], margin: '0 5px 5px', touchAction: 'pan-down' }}\r\n    //     onClick={() => this.updateFilter('', 'level')}\r\n    //     onWheel={(e) => this.onWheelHandler(e, 'level')}\r\n    //     onTouchMove={(e) => this.onTouchMoveHandler(e, 'level')}\r\n    //     onTouchStart={this.onTouchStartHandler}\r\n    //     dangerouslySetInnerHTML={{ __html: level }}\r\n    //   />\r\n\r\n    //   this.props.onChangeQueryLvl(level)\r\n    // }\r\n\r\n    // let hostname = ''\r\n    // if (this.props.filter.get('hostname') !== '') {\r\n    //   const hostnameStyle = this.props.settings.get('hostnameColor') && this.props.settings.get('hostnameColor')[this.props.filter.get('hostname')] ? { color: this.props.settings.get('hostnameColor')[this.props.filter.get('hostname')] } : {}\r\n    //   hostname = <Badge\r\n    //     variant='secondary'\r\n    //     ref='hostname'\r\n    //     style={{ ...hostnameStyle, margin: '0 5px 5px', touchAction: 'pan-down' }}\r\n    //     onClick={() => this.updateFilter('', 'hostname')}\r\n    //     onWheel={(e) => this.onWheelHandler(e, 'hostname')}\r\n    //     onTouchMove={(e) => this.onTouchMoveHandler(e, 'hostname')}\r\n    //     onTouchStart={this.onTouchStartHandler}\r\n    //     dangerouslySetInnerHTML={{ __html: this.props.filter.get('hostname') }}\r\n    //   />\r\n\r\n    //   this.props.onChangeQueryHostname(this.props.filter.get('hostname'))\r\n    // }\r\n\r\n    return (\r\n      <Navbar bg='dark' variant='dark' style={{ height: '60px' }} collapseOnSelect>\r\n        <Navbar.Brand>\r\n          <Navbar.Text className='d-lg-none'>\r\n            <img src={require('../TwitchGlitchWhite.svg')} alt='logo' width='30' height='30' className='d-inline-block align-top' />\r\n          </Navbar.Text>\r\n          <Navbar.Text className='d-none d-lg-block'>\r\n            <img src={require('../TwitchGlitchWhite.svg')} alt='logo' width='30' height='30' className='d-inline-block align-top' style={{ marginRight: '5px' }} />\r\n            TwitchChatViewer\r\n          </Navbar.Text>\r\n        </Navbar.Brand>\r\n\r\n        <Navbar.Text>\r\n          <span className='d-lg-none'>{this.props.length}</span>\r\n          <span className='d-none d-lg-block'>{this.props.length} lines</span>\r\n        </Navbar.Text>\r\n\r\n        <Navbar.Collapse className='justify-content-center'>\r\n          <Navbar.Text>\r\n            <ButtonToolbar>\r\n              {channel}\r\n              {name}\r\n            </ButtonToolbar>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n\r\n        <Navbar.Collapse className='justify-content-end'>\r\n          <Form\r\n            inline\r\n            onSubmit={e => {\r\n              e.preventDefault()\r\n              this.updateFilter(this.refs.search.value, 'msg')\r\n            }}\r\n          >\r\n\r\n            <Form.Group style={{ marginBottom: 0 }}>\r\n              <FormControl\r\n                style={{ width: '40vw' }}\r\n                type='text'\r\n                placeholder='Search'\r\n                className='btn-dark'\r\n                ref='search'\r\n                defaultValue={this.props.filter.get('msg')}\r\n                onChange={() => this.updateDebounceFilter(this.refs.search.value, 'msg')}\r\n              />\r\n            </Form.Group>\r\n\r\n          </Form>\r\n          <SettingsModal />\r\n        </Navbar.Collapse>\r\n\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nconst enhance = compose(\r\n  connect(\r\n    state => ({\r\n      length: state.length,\r\n      filter: state.filter,\r\n      settings: state.settings\r\n    }), // mapStateToProps\r\n    { update } // mapDispatchToProps\r\n  ),\r\n  addUrlProps({ urlPropsQueryConfig })\r\n)\r\nexport default enhance(TopBar)\r\n","/* globals fetch:true */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","const generalBoolean = maybeBoolean => maybeBoolean === '1'\r\n// https://github.com/twitch-devs/twitch-js/blob/next/src/Chat/utils/parsers/tags.js\r\n\r\nexport default (raw) => {\r\n  return raw.split(';')[1].substr(7).split(',').reduce((parsed, badge) => {\r\n    if (badge === '') { return parsed }\r\n    const [rawKey, value] = badge.split('/')\r\n    // return { ...parsed, [rawKey]: value }\r\n\r\n    switch (rawKey) {\r\n      // Booleans\r\n      case 'admin':\r\n      case 'broadcaster':\r\n      case 'global-mod':\r\n      case 'moderator':\r\n      case 'partner':\r\n      case 'premium':\r\n      case 'staff':\r\n      case 'sub-gifter':\r\n      case 'turbo':\r\n      case 'vip':\r\n        return { ...parsed, [rawKey]: generalBoolean(value) }\r\n      // Numbers\r\n      case 'bits':\r\n      case 'bits-leader':\r\n      case 'subscriber':\r\n        return { ...parsed, [rawKey]: Number(value) }\r\n      default:\r\n        return { ...parsed, [rawKey]: value }\r\n    }\r\n  }, {})\r\n}\r\n","/* globals fetch:true */\r\n\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../redux'\r\n\r\nimport difference from 'lodash.difference'\r\n\r\nlet tempChannels\r\n\r\nexport const _connect = ({ update, badges, emotes, channels }) => {\r\n  // console.log('badges_connect', badges, channels)\r\n\r\n  const StoreChannel = channels.toArray().filter(chan => chan.roomId) // filtere undefined roomId raus\r\n\r\n  const ChannelState = tempChannels\r\n  // console.log({ StoreChannel, ChannelState })\r\n\r\n  const _join = difference(StoreChannel, ChannelState)\r\n  if (_join.length) {\r\n    // console.log('badges_connectjoin', _join)\r\n  }\r\n\r\n  const _part = difference(ChannelState, StoreChannel)\r\n  if (_part.length) {\r\n    // console.log('badges_connectpart', _part)\r\n    // https://badges.twitch.tv/v1/badges/channels/gronkh/display\r\n  }\r\n\r\n  if (badges.global.size === 0) { // Badges\r\n    fetch('https://badges.twitch.tv/v1/badges/global/display') // Twitch\r\n      .then(res => {\r\n        if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n        else return res.json()\r\n      })\r\n      .then(res => update({ key: 'global', value: res.badge_sets }, 'UPDATE_BADGES'))\r\n      .catch(err => {\r\n        if (err.message !== '404') {\r\n          console.warn(err.message)\r\n        }\r\n      })\r\n  }\r\n\r\n  if (emotes.global.size === 0) { // Emotes\r\n    fetch('https://api.betterttv.net/2/emotes') // BTTV\r\n      .then(res => {\r\n        if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n        else return res.json()\r\n      })\r\n      .then(res => {\r\n        const emotes = {}\r\n        for (let i = 0, len = res.emotes.length; i < len; i++) {\r\n          emotes[res.emotes[i].code] = res.emotes[i]\r\n        }\r\n        update({ key: 'globalbttv', value: emotes }, 'UPDATE_EMOTES')\r\n      })\r\n      .catch(err => {\r\n        if (err.message !== '404') {\r\n          console.warn(err.message)\r\n        }\r\n      })\r\n\r\n    fetch('https://api.frankerfacez.com/v1/set/global') // FFZ\r\n      .then(res => {\r\n        if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n        else return res.json()\r\n      })\r\n      .then(res => {\r\n        const resEmotes = res.sets[res.default_sets[0]].emoticons\r\n        const emotes = {}\r\n        for (let i = 0, len = resEmotes.length; i < len; i++) {\r\n          emotes[resEmotes[i].name] = resEmotes[i]\r\n        }\r\n        update({ key: 'globalffz', value: emotes }, 'UPDATE_EMOTES')\r\n      })\r\n      .catch(err => {\r\n        if (err.message !== '404') {\r\n          console.warn(err.message)\r\n        }\r\n      })\r\n  }\r\n\r\n  StoreChannel.forEach(value => {\r\n    if (!badges[value.name]) { // Badges\r\n      fetch(`https://badges.twitch.tv/v1/badges/channels/${value.roomId}/display`) // Twitch\r\n        .then(res => {\r\n          if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n          else return res.json()\r\n        })\r\n        .then(res => {\r\n          update({ key: value.name, value: res.badge_sets }, 'UPDATE_BADGES')\r\n        })\r\n        .catch(err => {\r\n          if (err.message !== '404') {\r\n            console.warn(err.message)\r\n          }\r\n        })\r\n    }\r\n\r\n    if (!emotes[`${value.name}-bttv`]) { // Emotes\r\n      fetch(`https://api.betterttv.net/2/channels/${value.name}`) // BTTV\r\n        .then(res => {\r\n          if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n          else return res.json()\r\n        })\r\n        .then(res => {\r\n          const emotes = {}\r\n          for (let i = 0, len = res.emotes.length; i < len; i++) {\r\n            emotes[res.emotes[i].code] = res.emotes[i]\r\n          }\r\n          update({ key: `${value.name}-bttv`, value: emotes }, 'UPDATE_EMOTES')\r\n        })\r\n        .catch(err => {\r\n          if (err.message !== '404') {\r\n            console.warn(err.message)\r\n          }\r\n        })\r\n    }\r\n\r\n    if (!emotes[`${value.name}-ffz`]) { // Emotes\r\n      fetch(`https://api.frankerfacez.com/v1/room/id/${value.roomId}`) // FFZ\r\n        .then(res => {\r\n          if (res.status !== 200) throw new Error(res.status || res.statusText)\r\n          else return res.json()\r\n        })\r\n        .then(res => {\r\n          if (res.room && res.room.set) {\r\n            if (res.sets[res.room.set] && res.sets[res.room.set].emoticons && res.sets[res.room.set].emoticons.length !== 0) { // das Array könnte auch leer sein\r\n              const resEmotes = res.sets[res.room.set].emoticons\r\n              const emotes = {}\r\n              for (let i = 0, len = resEmotes.length; i < len; i++) {\r\n                emotes[resEmotes[i].name] = resEmotes[i]\r\n              }\r\n              update({ key: `${value.name}-ffz`, value: emotes }, 'UPDATE_EMOTES')\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          if (err.message !== '404') {\r\n            console.warn(err.message)\r\n          }\r\n        })\r\n    }\r\n  })\r\n\r\n  tempChannels = StoreChannel\r\n  return null\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    channels: state.channels,\r\n    badges: state.badges,\r\n    emotes: state.emotes\r\n  }), // mapStateToProps\r\n  { update } // mapDispatchToProps\r\n)(_connect)\r\n","// import protobuf from 'protobufjs' // https://www.npmjs.com/package/protobufjs\r\n\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../redux'\r\n\r\n// import getRandomColor from '../helper/getRandomColor'\r\nimport parseBadges from '../helper/parseBadges'\r\n\r\nimport difference from 'lodash.difference'\r\n\r\nimport TwitchJs from 'twitch-js'\r\n\r\n// const formatEmotes = (text, emotes) => {\r\n//   if (emotes === []) return text\r\n//   text = text.split('')\r\n//   for (let i = 0, len = emotes.length; i < len; i++) {\r\n//     // A cookie associated with a cross-site resource at https://jtvnw.net/ was set without the `SameSite` attribute. A future release of Chrome will only deliver cookies with cross-site requests if they are set with `SameSite=None` and `Secure`. You can review cookies in developer tools under Application>Storage>Cookies and see more details at https://www.chromestatus.com/feature/5088147346030592 and https://www.chromestatus.com/feature/5633521622188032.\r\n//     text.splice(emotes[i].start, emotes[i].end, '<img class=\"emoticon\" src=\"//static-cdn.jtvnw.net/emoticons/v1/' + emotes[i].id + '/1.0\">')\r\n//   }\r\n//   return text.join('')\r\n// }\r\n\r\nconst { chat } = new TwitchJs({ token: '', username: `justinfan${Math.floor((Math.random() * 80000) + 1000)}`, chat: { joinTimeout: 60000 }, log: { level: 0 } })\r\n\r\n// // eslint-disable-next-line no-control-regex\r\n// const ACTION = /(\\x01ACTION )(.*)(\\x01)/\r\n\r\nexport const _disconnect = () => {\r\n  chat.disconnect()\r\n}\r\n\r\nconst connected = () => chat._readyState === 3\r\n\r\nexport const _connect = ({ update, channels }) => {\r\n  // console.log('_readyState', chat._readyState)\r\n  // console.log(channels.toArray())\r\n  if (connected()) { // https://github.com/twitch-devs/twitch-js/blob/083d8626c8fdfb19ff147a59f60d487b712be06c/src/Chat/index.js\r\n    const StoreChannel = channels.toArray().map(chan => chan.name)\r\n    const ChannelState = Object.keys(chat._channelState).map(chan => chan.substr(1))\r\n\r\n    const _joins = difference(StoreChannel, ChannelState)\r\n    if (_joins.length) {\r\n      for (const _join of _joins) {\r\n        chat.join(_join).then(data => {\r\n          update({ name: _join, roomId: data.roomState.roomId }, 'ADD_ROOMID')\r\n          update([{ timestamp: +new Date(), chan: _join, msg: '=> JOIN' }], 'ADD_DATA')\r\n        })\r\n      }\r\n    }\r\n\r\n    const _parts = difference(ChannelState, StoreChannel)\r\n    if (_parts.length) {\r\n      // console.log('part', _parts)\r\n      for (const _part of _parts) {\r\n        chat.join(_part).then(() => {\r\n          update([{ timestamp: +new Date(), chan: _part, msg: '<= LEAVE' }], 'ADD_DATA')\r\n        })\r\n      }\r\n    }\r\n  } else if (chat._readyState === 0) {\r\n    chat.connect()\r\n      .then(async () => {\r\n        // console.log('Connect ...')\r\n        // await Promise.all(channels.toArray().map(channel => chat.join(channel.name))).then(data => console.log(data))\r\n        channels.toArray().map(channel => chat.join(channel.name).then(_ => update([{ timestamp: +new Date(), chan: channel.name, msg: '=> JOIN' }], 'ADD_DATA')))\r\n      })\r\n      .catch(err => {\r\n        console.warn(err)\r\n      })\r\n\r\n    chat.on('*', ({ channel, command, message, tags, timestamp, username, _raw }) => {\r\n      timestamp = timestamp || +new Date()\r\n      const chan = channel && channel.substr(1)\r\n      const name = username\r\n      // let msg\r\n      switch (command) {\r\n        case 'PRIVMSG':\r\n          // console.log(_raw)\r\n          // msg = formatEmotes(message, tags.emotes)\r\n          // msg = message\r\n          // if (tags.color === null) {\r\n          //   tags.color = getRandomColor()\r\n          // }\r\n          // if (msg.toLowerCase().indexOf('@' + chan) !== -1) {\r\n          //   tags.attention = true\r\n          // }\r\n          // const found = ACTION.exec(msg)\r\n          // if (found !== null) {\r\n          //   msg = found[2]\r\n          //   tags.action = true\r\n          // }\r\n\r\n          if (tags && tags.badges) {\r\n            if (tags.badges !== {}) {\r\n              // delete tags.badges\r\n              tags.badges_ = tags.badges\r\n              tags.badges = parseBadges(_raw)\r\n            }\r\n          }\r\n\r\n          update([{ timestamp, chan, name, msg: message, tags, raw: _raw }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'USERNOTICE':\r\n          update([{ timestamp, chan, msg: tags.systemMsg }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'CLEARMSG': // https://dev.twitch.tv/docs/irc/tags#clearmsg-twitch-tags\r\n          // Single message removal on a channel. This is triggered via /delete <target-msg-id> on IRC.\r\n          // console.log('CLEARMSG', { channel, msg, tags, timestamp, username })\r\n          tags = {\r\n            ...tags,\r\n            banReason: true,\r\n            banMsg: '[CLEARMSG]'\r\n          }\r\n          // update([{ timestamp, chan, msg: `REMOVE ${username}, ${tags.targetMsgId}` }], 'ADD_DATA')\r\n          update({ timestamp, chan, username, tags }, 'REMOVE_DATA')\r\n          break\r\n\r\n        case 'CLEARCHAT': // https://dev.twitch.tv/docs/irc/tags#clearchat-twitch-tags\r\n          // Temporary or permanent ban on a channel.\r\n          if (tags.banDuration) { // ban-duration (Optional) Duration of the timeout, in seconds. If omitted, the ban is permanent.\r\n            tags.banMsg = `[TIMEOUT, ${tags.banDuration + 's' + (tags.banReason ? ', ' + tags.banReason : '')}]`\r\n          } else {\r\n            tags.banMsg = `[BAN, banReason: ${tags.banReason}]`\r\n          }\r\n          // update([{ timestamp, chan, username: 'twitch.tv', msg: tags.banMsg }], 'ADD_DATA')\r\n          update({ timestamp, chan, username, tags }, 'EDIT_DATA')\r\n          break\r\n\r\n        case 'JOIN':\r\n        //   update([{ timestamp, chan: '-', msg: '=> JOIN' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'PART':\r\n        //   update([{ timestamp, chan: '-', msg: '<= PART' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'CONNECTED':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'CONNECTED' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'NOT_READY':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'TODO: NOT_READY' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'CONNECTING':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'TODO: CONNECTING' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'RECONNECTING':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'TODO: RECONNECTING' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'DISCONNECTING':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'TODO: DISCONNECTING' }], 'ADD_DATA')\r\n          break\r\n\r\n        case 'DISCONNECTED':\r\n          update([{ timestamp, chan: 'twitch.tv', msg: 'TODO: DISCONNECTED' }], 'ADD_DATA')\r\n          break\r\n\r\n          // \"HOSTTARGET\"\r\n          // { channel: \"#tsm_viss\", command: \"HOSTTARGET\", message: undefined, tags: { … }, timestamp: Sat Nov 02 2019 00: 00: 23 GMT + 0100(Mitteleuropäische Normalzeit), … }\r\n          // channel: \"#tsm_viss\"\r\n          // command: \"HOSTTARGET\"\r\n          // message: undefined\r\n          // tags: { }\r\n          // timestamp: Sat Nov 02 2019 00: 00: 23 GMT + 0100(Mitteleuropäische Normalzeit) { }\r\n          // username: \"halifax\"\r\n\r\n        case 'NOTICE':\r\n          update([{ timestamp, chan: channel, msg: message }], 'ADD_DATA')\r\n          // { channel: \"#tsm_viss\", command: \"NOTICE\", message: \"Now hosting Halifax.\", tags: { … }, timestamp: Sat Nov 02 2019 00: 00: 23 GMT + 0100(Mitteleuropäische Normalzeit), … }\r\n          // channel: \"#tsm_viss\"\r\n          // command: \"NOTICE\"\r\n          // message: \"Now hosting Halifax.\"\r\n          // tags: { msgId: \"host_on\" }\r\n          // timestamp: Sat Nov 02 2019 00: 00: 23 GMT + 0100(Mitteleuropäische Normalzeit) { }\r\n          // username: \"tmi.twitch.tv\"\r\n\r\n          // { channel: \"#eosandy\", command: \"NOTICE\", message: \"Now hosting Shurjoka.\", tags: { … }, timestamp: Tue Nov 05 2019 17: 15: 04 GMT + 0100(Mitteleuropäische Normalzeit), … }\r\n          // channel: \"#eosandy\"\r\n          // command: \"NOTICE\"\r\n          // message: \"Now hosting Shurjoka.\"\r\n          // tags: { msgId: \"host_on\" }\r\n          // timestamp: Tue Nov 05 2019 17: 15: 04 GMT + 0100(Mitteleuropäische Normalzeit) { }\r\n          // username: \"tmi.twitch.tv\"\r\n          // __proto__: Object\r\n          console.log('NOTICE', { channel, command, message, tags, timestamp, username })\r\n          break\r\n\r\n        case '001': ; break\r\n        case '002': ; break\r\n        case '003': ; break\r\n        case '004': ; break\r\n        case '353': ; break\r\n        case '366': ; break\r\n        case '372': ; break\r\n        case '375': ; break\r\n        case '376': ; break\r\n        case 'CAP': ; break\r\n        case 'MODE': ; break\r\n        case 'PING': ; break\r\n        case 'ROOMSTATE': ; break\r\n\r\n        case 'PARSE_ERROR_ENCOUNTERED': ; break\r\n\r\n        default:\r\n          console.log('default', { channel, command, message, tags, timestamp, username })\r\n      }\r\n    })\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    channels: state.channels\r\n  }), // mapStateToProps\r\n  // state => ({ settings: state.settings }), // mapStateToProps\r\n  // state => ({ }), // mapStateToProps\r\n  { update } // mapDispatchToProps\r\n)(_connect)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Log from './components/Log'\nimport TopBar from './components/TopBar'\nimport * as serviceWorker from './serviceWorker'\n\nimport DataService from './data/twitch'\nimport BadgesService from './data/badges'\nimport { Provider } from 'react-redux'\nimport { store } from './redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <TopBar />\n    <Log />\n    <DataService />\n    <BadgesService />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister()\nserviceWorker.register()\n"],"sourceRoot":""}